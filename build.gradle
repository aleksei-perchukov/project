plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
    id 'org.gradle.test-retry' version '1.0.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    restAssuredVersion = "5.2.0",
    junitVersion = "5.9.0",
    slf4jVersion = "2.0.3",
    assertJVersion = "3.23.1"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            'org.projectlombok:lombok:1.18.22',
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.fasterxml.jackson.core:jackson-databind:2.14.0",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'commons-io:commons-io:2.11.0',
            'com.github.javafaker:javafaker:1.0.2',
            'com.codeborne:selenide:6.9.0',
            "org.assertj:assertj-core:$assertJVersion",
            'org.seleniumhq.selenium:selenium-java:4.6.0'
    )
    testRuntimeOnly('org.aspectj:aspectjweaver:1.9.9.1')
}
compileJava.options.encoding = 'UTF-8'

test {
    useJUnitPlatform()
    retry {
        maxRetries = 2
        maxFailures = 20
        failOnPassedAfterRetry = true
    }
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
tasks.withType(Test) {
    systemProperties(System.getProperties())

    useJUnitPlatform()
    systemProperty "file.encoding", "utf-8"
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task Debug(type: Test) {
    useJUnitPlatform {
        includeTags 'Debug'
    }
}